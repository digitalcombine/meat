# Numeric Class Tests
#
# Copyright (c) 2017 Ron R Wills <ron.rwsoft@gmail.com>
#
# This file is part of Meat.
#
# Meat is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Meat is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Meat.  If not, see <http://www.gnu.org/licenses/>.

Library import: UnitTest

Numeric subClass: BadNumeric as: {

  class method new {
    self newObject
    context return: self
  }

}

Test.Suite subClass: Test.Numeric as: {

  method setup {
    self title: "3.8 The Numeric Class"
    badno = [BadNumeric new]
    answer = 0

    self title: "3.8.1 The minValue method" test: {
      Exception try: {
        answer = [Numeric minValue]
        self fail: "method minValue should throw an Exception"
      }
			self pass
    }

    self title: "3.8.2 The maxValue method" test: {
      Exception try: {
        answer = [Numeric maxValue]
        self fail: "method minValue should throw an Exception"
      }
			self pass
    }

    self title: "3.8.3 The + method" test: {
      Exception try: {
        answer = [badno + 1]
        self fail: "method + should throw an Exception"
      }
			self pass
    }

		self title: "3.8.4 The - method" test: {
      Exception try: {
        answer = [badno - 1]
        self fail: "method - should throw an Exception"
      }
			self pass
		}

    self title: "3.8.5 The * method" test: {
      Exception try: {
        answer = [badno * 1]
        self fail: "method * should throw an Exception"
      }
			self pass
	  }

    self title: "3.8.6 The / method" test: {
      Exception try: {
        answer = [badno / 1]
        self fail: "method / should throw an Exception"
      }
			self pass
		}

		self title: "3.8.7 The % method" test: {
      Exception try: {
        answer = [badno % 1]
        self fail: "method % should throw an Exception"
      }
			self pass
	  }

    self title: "3.8.8 The ^ method" test: {
      Exception try: {
        answer = [badno ^ 1]
        self fail: "method ^ should throw an Exception"
      }
			self pass
		}

		self title: "3.8.9 The == method" test: {
      Exception try: {
        answer = [badno == 1]
        self fail: "method == should throw an Exception"
      }
			self pass
		}

		self title: "3.8.10 The <> method" test: {
      Exception try: {
        answer = [badno <> 1]
        self fail: "method != should throw an Exception"
      }
			self pass
		}

		self title: "3.8.11 The < method" test: {
      Exception try: {
        answer = [badno < 1]
        self fail: "method < should throw an Exception"
      }
			self pass
		}

		self title: "3.8.12 The <= method" test: {
      Exception try: {
        answer = [badno <= 1]
        self fail: "method <= should throw an Exception"
      }
			self pass
		}

		self title: "3.8.13 The > method" test: {
      Exception try: {
        answer = [badno > 1]
        self fail: "method > should throw an Exception"
      }
			self pass
		}

		self title: "3.8.14 The >= method" test: {
      Exception try: {
        answer = [badno >= 1]
        self fail: "method >= should throw an Exception"
      }
			self pass
		}

  }
}
